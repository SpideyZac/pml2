[{"filePath":"electron\\main.js","action":"delete","patchText":"@@ -1,2748 +0,0 @@\n-const %7B app, BrowserWindow, shell, ipcMain %7D = require(%22electron%22),%0A    path = require(%22path%22);%0Alet browserWindow = null;%0Aconst singleInstanceLockSucessful = app.requestSingleInstanceLock();%0A(singleInstanceLockSucessful%0A    ? app.on(%22second-instance%22, () =%3E %7B%0A          null != browserWindow &&%0A              (browserWindow.isMinimized() && browserWindow.restore(),%0A              browserWindow.focus());%0A      %7D)%0A    : app.quit(),%0A    app.on(%22web-contents-created%22, (e, n) =%3E %7B%0A        (n.setWindowOpenHandler(%0A            (%7B url: e %7D) =%3E (%0A                (%22https://www.kodub.com/%22 != e &&%0A                    %22https://opengameart.org/content/sci-fi-theme-1%22 != e &&%0A                    %22https://www.kodub.com/privacy/polytrack%22 != e &&%0A                    %22https://www.kodub.com/discord/polytrack%22 != e) %7C%7C%0A                    setImmediate(() =%3E %7B%0A                        shell.openExternal(e);%0A                    %7D),%0A                %7B action: %22deny%22 %7D%0A            )%0A        ),%0A            n.on(%22will-navigate%22, (e, n) =%3E %7B%0A                e.preventDefault();%0A            %7D));%0A    %7D),%0A    ipcMain.on(%22quit%22, () =%3E %7B%0A        app.quit();%0A    %7D),%0A    app.on(%22window-all-closed%22, () =%3E %7B%0A        app.quit();%0A    %7D),%0A    app.whenReady().then(() =%3E %7B%0A        ((browserWindow = new BrowserWindow(%7B%0A            width: 1024,%0A            height: 800,%0A            minWidth: 320,%0A            minHeight: 200,%0A            fullscreen: !0,%0A            useContentSize: !0,%0A            autoHideMenuBar: !0,%0A            webPreferences: %7B%0A                devTools: !1,%0A                preload: path.join(__dirname, %22preload.js%22),%0A                backgroundThrottling: !1,%0A            %7D,%0A        %7D)),%0A            browserWindow.removeMenu(),%0A            browserWindow.webContents.on(%22before-input-event%22, (e, n) =%3E %7B%0A                n.isAutoRepeat %7C%7C%0A                    %22keyDown%22 != n.type %7C%7C%0A                    ((%22F11%22 == n.code %7C%7C (n.alt && %22Enter%22 == n.code)) &&%0A                        (browserWindow.setFullScreen(%0A                            !browserWindow.isFullScreen()%0A                        ),%0A                        e.preventDefault()));%0A            %7D),%0A            browserWindow.on(%22enter-full-screen%22, () =%3E %7B%0A                browserWindow.webContents.send(%22fullscreen-change%22, !0);%0A            %7D),%0A            browserWindow.on(%22leave-full-screen%22, () =%3E %7B%0A                browserWindow.webContents.send(%22fullscreen-change%22, !1);%0A            %7D),%0A            ipcMain.on(%22is-fullscreen%22, (e) =%3E %7B%0A                e.returnValue = browserWindow.isFullScreen();%0A            %7D),%0A            ipcMain.on(%22set-fullscreen%22, (e, n) =%3E %7B%0A                browserWindow.setFullScreen(n);%0A            %7D),%0A            browserWindow.loadFile(%22index.html%22));%0A    %7D));%0A\n","fileType":"text"},{"filePath":"electron\\preload.js","action":"delete","patchText":"@@ -1,376 +0,0 @@\n-const %7B contextBridge, ipcRenderer %7D = require(%22electron%22);%0AcontextBridge.exposeInMainWorld(%22electron%22, %7B%0A    quit: () =%3E ipcRenderer.send(%22quit%22),%0A    addFullscreenChangeListener: (e) =%3E%0A        ipcRenderer.on(%22fullscreen-change%22, () =%3E e()),%0A    isFullscreen: () =%3E ipcRenderer.sendSync(%22is-fullscreen%22),%0A    setFullscreen: (e) =%3E ipcRenderer.send(%22set-fullscreen%22, e),%0A%7D);%0A\n","fileType":"text"},{"filePath":"electron\\main.cjs","action":"create","patchText":"@@ -0,0 +1,2865 @@\n+const %7B app, BrowserWindow, shell, ipcMain %7D = require(%22electron%22),%0A    path = require(%22path%22),%0A    serve = require(%22electron-serve%22);%0Aconst loadURL = serve.default(%7B directory: path.join(__dirname, %22..%22, %22..%22) %7D);%0Alet browserWindow = null;%0Aconst singleInstanceLockSucessful = app.requestSingleInstanceLock();%0A(singleInstanceLockSucessful%0A    ? app.on(%22second-instance%22, () =%3E %7B%0A          null != browserWindow &&%0A              (browserWindow.isMinimized() && browserWindow.restore(),%0A              browserWindow.focus());%0A      %7D)%0A    : app.quit(),%0A    app.on(%22web-contents-created%22, (e, n) =%3E %7B%0A        (n.setWindowOpenHandler(%0A            (%7B url: e %7D) =%3E (%0A                (%22https://www.kodub.com/%22 != e &&%0A                    %22https://opengameart.org/content/sci-fi-theme-1%22 != e &&%0A                    %22https://www.kodub.com/privacy/polytrack%22 != e &&%0A                    %22https://www.kodub.com/discord/polytrack%22 != e) %7C%7C%0A                    setImmediate(() =%3E %7B%0A                        shell.openExternal(e);%0A                    %7D),%0A                %7B action: %22deny%22 %7D%0A            )%0A        ),%0A            n.on(%22will-navigate%22, (e, n) =%3E %7B%0A                e.preventDefault();%0A            %7D));%0A    %7D),%0A    ipcMain.on(%22quit%22, () =%3E %7B%0A        app.quit();%0A    %7D),%0A    app.on(%22window-all-closed%22, () =%3E %7B%0A        app.quit();%0A    %7D),%0A    app.whenReady().then(async () =%3E %7B%0A        ((browserWindow = new BrowserWindow(%7B%0A            width: 1024,%0A            height: 800,%0A            minWidth: 320,%0A            minHeight: 200,%0A            fullscreen: !0,%0A            useContentSize: !0,%0A            autoHideMenuBar: !0,%0A            webPreferences: %7B%0A                devTools: !1,%0A                preload: path.join(__dirname, %22preload.js%22),%0A                backgroundThrottling: !1,%0A            %7D,%0A        %7D)),%0A            browserWindow.removeMenu(),%0A            browserWindow.webContents.on(%22before-input-event%22, (e, n) =%3E %7B%0A                n.isAutoRepeat %7C%7C%0A                    %22keyDown%22 != n.type %7C%7C%0A                    ((%22F11%22 == n.code %7C%7C (n.alt && %22Enter%22 == n.code)) &&%0A                        (browserWindow.setFullScreen(%0A                            !browserWindow.isFullScreen()%0A                        ),%0A                        e.preventDefault()));%0A            %7D),%0A            browserWindow.on(%22enter-full-screen%22, () =%3E %7B%0A                browserWindow.webContents.send(%22fullscreen-change%22, !0);%0A            %7D),%0A            browserWindow.on(%22leave-full-screen%22, () =%3E %7B%0A                browserWindow.webContents.send(%22fullscreen-change%22, !1);%0A            %7D),%0A            ipcMain.on(%22is-fullscreen%22, (e) =%3E %7B%0A                e.returnValue = browserWindow.isFullScreen();%0A            %7D),%0A            ipcMain.on(%22set-fullscreen%22, (e, n) =%3E %7B%0A                browserWindow.setFullScreen(n);%0A            %7D),%0A            await loadURL(browserWindow));%0A    %7D));%0A\n","fileType":"text"},{"filePath":"electron\\preload.cjs","action":"create","patchText":"@@ -0,0 +1,376 @@\n+const %7B contextBridge, ipcRenderer %7D = require(%22electron%22);%0AcontextBridge.exposeInMainWorld(%22electron%22, %7B%0A    quit: () =%3E ipcRenderer.send(%22quit%22),%0A    addFullscreenChangeListener: (e) =%3E%0A        ipcRenderer.on(%22fullscreen-change%22, () =%3E e()),%0A    isFullscreen: () =%3E ipcRenderer.sendSync(%22is-fullscreen%22),%0A    setFullscreen: (e) =%3E ipcRenderer.send(%22set-fullscreen%22, e),%0A%7D);%0A\n","fileType":"text"}]